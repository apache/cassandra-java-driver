name: 'Tests (Driver 4.x)'

on:
  push:
    branches: [ scylla-4.*x ]
  pull_request:
    branches: [ scylla-4.*x ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Compile source and tests
        run: mvn -B compile test-compile -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

  verify:
    name: Full verify
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Full verify
        run: mvn -B verify -DskipTests


  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Run unit tests
        run: mvn -B test -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Copy test results
        if: success() || failure()
        run: |
          shopt -s globstar
          mkdir unit
          cp --parents ./**/target/*-reports/*.xml unit/
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

  setup-integration-tests:
    name: Setup ITs
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

  cassandra-integration-tests:
    name: Cassandra ITs
    runs-on: ubuntu-latest
    needs: [setup-integration-tests]
    timeout-minutes: 90

    strategy:
      matrix:
        java-version: [8]
        cassandra-version: [STABLE-3,STABLE-4]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Setup environment
        run: |
          pip3 install https://github.com/scylladb/scylla-ccm/archive/a93125bc6ad7dd5c9694331e89dc1fb212431ffe.zip

      - name: Get cassandra version
        id: cassandra-version
        run: |
          if [ "${{ matrix.cassandra-version }} == "STABLE-3" ]; then \
            echo "value=$(python3 ci/version_fetch.py cassandra3-stable:1)" >> $GITHUB_OUTPUT; \
          else; \
            echo "value=$(python3 ci/version_fetch.py cassandra4-stable:1)" >> $GITHUB_OUTPUT; \
          fi

      - name: Run integration tests on Cassandra (${{ steps.cassandra-version.outputs.value }})
        run: mvn -B -e verify -Dccm.version=${{ steps.cassandra-version.outputs.value }} -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Copy test results
        if: success() || failure()
        run: |
          shopt -s globstar
          mkdir cassandra-${{ steps.cassandra-version.outputs.value }}
          cp --parents ./**/target/*-reports/*.xml cassandra-${{ steps.cassandra-version.outputs.value }}/
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

      - name: Upload CCM logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-cassandra-${{ steps.cassandra-version.outputs.value }}
          path: /tmp/ccm*/ccm*/node*/logs/*

  scylla-integration-tests:
    name: Scylla ITs
    runs-on: ubuntu-latest
    needs: [setup-integration-tests]
    timeout-minutes: 90

    strategy:
      matrix:
        scylla-version: [ ENTERPRISE-RELEASE, ENTERPRISE-RC, OSS-RELEASE, OSS-RC ]
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Setup environment
        run: |
          pip3 install https://github.com/scylladb/scylla-ccm/archive/a93125bc6ad7dd5c9694331e89dc1fb212431ffe.zip
          sudo sh -c "echo 2097152 > /proc/sys/fs/aio-max-nr"

      - name: Get scylla version
        id: scylla-version
        run: |
          if [ "${{ matrix.scylla-version }} == "ENTERPRISE-RELEASE" ]; then \
            echo "value=$(python3 ci/version_fetch.py scylla-enterprise-stable:2)" >> $GITHUB_OUTPUT; \
          elif [ "${{ matrix.scylla-version }} == "ENTERPRISE-RC" ]; then \
            echo "value=$(python3 ci/version_fetch.py scylla-enterprise-rc)" >> $GITHUB_OUTPUT; \
          elif [ "${{ matrix.scylla-version }} == "OSS-RELEASE" ];  \
            echo "value=$(python3 ci/version_fetch.py scylla-oss-stable:2)" >> $GITHUB_OUTPUT; \
          elif [ "${{ matrix.scylla-version }} == "OSS-RC" ]; \
            echo "value=$(python3 ci/version_fetch.py scylla-oss-rc)" >> $GITHUB_OUTPUT; \
          else
            echo "Unknown scylla version name `${{ matrix.scylla-version }}`"
            exit 1
          fi

      - name: Run integration tests on Scylla (${{ steps.scylla-version.outputs.value }})
        run: mvn -B verify -Dccm.version=${{ steps.scylla-version.outputs.value }} -Dccm.scylla=true -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Copy test results
        if: success() || failure()
        run: |
          shopt -s globstar
          mkdir scylla-${{ steps.scylla-version.outputs.value }}
          cp --parents ./**/target/*-reports/*.xml scylla-${{ steps.scylla-version.outputs.value }}/

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

      - name: Upload CCM logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-scylla-${{ steps.scylla-version.outputs.value }}
          path: /tmp/ccm*/ccm*/node*/logs/*
