// Configures Revapi (https://revapi.org/getting-started.html) to check API compatibility between
// successive driver versions.
{
  "revapi": {
    "java": {
      "filter": {
        "packages": {
          "regex": true,
          "exclude": [
            "com\\.datastax\\.oss\\.protocol\\.internal(\\..+)?",
            "com\\.datastax\\.oss\\.driver\\.internal(\\..+)?",
            "com\\.datastax\\.oss\\.driver\\.shaded(\\..+)?",
            "com\\.datastax\\.oss\\.simulacron(\\..+)?",
            "org\\.assertj(\\..+)?",
            // Don't re-check sibling modules that this module depends on
            "com\\.datastax\\.oss\\.driver\\.api\\.core(\\..+)?"
          ]
        }
      }
    },
    "ignore": [
      {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.Set<java.net.InetSocketAddress> com.datastax.oss.driver.api.testinfra.CassandraResourceRule::getContactPoints()",
        "new": "method java.util.Set<com.datastax.oss.driver.api.core.metadata.EndPoint> com.datastax.oss.driver.api.testinfra.CassandraResourceRule::getContactPoints()",
        "justification": "JAVA-2165: Abstract node connection information"
      },
      {
        "code": "java.method.numberOfParametersChanged",
        "old": "method void com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::init(java.util.Map<java.net.InetSocketAddress, com.datastax.oss.driver.api.core.metadata.Node>, com.datastax.oss.driver.api.core.loadbalancing.LoadBalancingPolicy.DistanceReporter, java.util.Set<java.net.InetSocketAddress>)",
        "new": "method void com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::init(java.util.Map<java.util.UUID, com.datastax.oss.driver.api.core.metadata.Node>, com.datastax.oss.driver.api.core.loadbalancing.LoadBalancingPolicy.DistanceReporter)",
        "justification": "JAVA-2165: Abstract node connection information"
      },
      {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.Set<java.net.InetSocketAddress> com.datastax.oss.driver.api.testinfra.simulacron.SimulacronRule::getContactPoints()",
        "new": "method java.util.Set<com.datastax.oss.driver.api.core.metadata.EndPoint> com.datastax.oss.driver.api.testinfra.simulacron.SimulacronRule::getContactPoints()",
        "justification": "JAVA-2165: Abstract node connection information"
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method com.datastax.oss.driver.internal.core.config.typesafe.DefaultDriverConfigLoaderBuilder com.datastax.oss.driver.api.testinfra.session.SessionUtils::configLoaderBuilder()",
        "new": "method com.datastax.oss.driver.api.core.config.ProgrammaticDriverConfigLoaderBuilder com.datastax.oss.driver.api.testinfra.session.SessionUtils::configLoaderBuilder()",
        "justification": "JAVA-2201: Expose a public API for programmatic config"
      },
      {
        "code": "java.annotation.removed",
        "old": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(===com.datastax.oss.driver.api.core.session.Request===, com.datastax.oss.driver.api.core.session.Session)",
        "new": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(===com.datastax.oss.driver.api.core.session.Request===, com.datastax.oss.driver.api.core.session.Session)",
        "annotation": "@edu.umd.cs.findbugs.annotations.NonNull",
        "justification": "Method arguments were mistakenly annotated with @NonNull"
      },
      {
        "code": "java.annotation.added",
        "old": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(===com.datastax.oss.driver.api.core.session.Request===, com.datastax.oss.driver.api.core.session.Session)",
        "new": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(===com.datastax.oss.driver.api.core.session.Request===, com.datastax.oss.driver.api.core.session.Session)",
        "annotation": "@edu.umd.cs.findbugs.annotations.Nullable",
        "justification": "Method arguments were mistakenly annotated with @NonNull"
      },
      {
        "code": "java.annotation.removed",
        "old": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(com.datastax.oss.driver.api.core.session.Request, ===com.datastax.oss.driver.api.core.session.Session===)",
        "new": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(com.datastax.oss.driver.api.core.session.Request, ===com.datastax.oss.driver.api.core.session.Session===)",
        "annotation": "@edu.umd.cs.findbugs.annotations.NonNull",
        "justification": "Method arguments were mistakenly annotated with @NonNull"
      },
      {
        "code": "java.annotation.added",
        "old": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(com.datastax.oss.driver.api.core.session.Request, ===com.datastax.oss.driver.api.core.session.Session===)",
        "new": "parameter java.util.Queue<com.datastax.oss.driver.api.core.metadata.Node> com.datastax.oss.driver.api.testinfra.loadbalancing.SortingLoadBalancingPolicy::newQueryPlan(com.datastax.oss.driver.api.core.session.Request, ===com.datastax.oss.driver.api.core.session.Session===)",
        "annotation": "@edu.umd.cs.findbugs.annotations.Nullable",
        "justification": "Method arguments were mistakenly annotated with @NonNull"
      }
    ]
  }
}
