/*
 * Copyright DataStax, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.datastax.oss.driver.internal.mapper.processor;

import com.squareup.javapoet.JavaFile;
import java.io.IOException;
import java.io.UncheckedIOException;
import java.io.Writer;
import javax.tools.JavaFileObject;

/**
 * Handles the generation of an individual file created by the processor.
 *
 * <p>There can be multiple ones for a single annotated element.
 */
public abstract class FileGenerator {

  /** A generic warning that can get added to the javadoc of any generated type. */
  public static final String JAVADOC_GENERATED_WARNING =
      "Generated by the DataStax driver mapper, do not edit directly.\n";

  public static final String JAVADOC_PARAGRAPH_SEPARATOR = "\n\n<p>";

  protected final GenerationContext context;

  protected FileGenerator(GenerationContext context) {
    this.context = context;
  }

  public void generate() {
    try {
      JavaFileObject file = context.getFiler().createSourceFile(getFileName());
      try (Writer writer = file.openWriter()) {
        getContents().indent(context.getIndent()).build().writeTo(writer);
      }
    } catch (IOException e) {
      throw new UncheckedIOException(e);
    }
  }

  /**
   * Canonical (fully qualified) name of the principal type being declared in this file or a package
   * name followed by {@code ".package-info"} for a package information file.
   */
  protected abstract String getFileName();

  protected abstract JavaFile.Builder getContents();
}
