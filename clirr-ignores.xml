<?xml version='1.0'?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!--
  Clirr is a tool that checks Java libraries for binary and source compatibility with older releases.

  This file lists known (and accepted) differences with the reference version specified in pom.xml.

  To update this file:
  * run `mvn clirr:clirr` at the root directory
  * check the reports in `<module>/target/site/clirr-report.html`
  * add new differences if needed. Difference types are explained at http://www.mojohaus.org/clirr-maven-plugin/examples/ignored-differences.html

  The formatter introduces line breaks that make Clirr unhappy:
  @formatter:off
-->
<differences>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/mapping/ColumnMapper$Kind</className>
        <justification>False positive, the enclosing class is package-private so this was never exposed</justification>
    </difference>

    <difference>
        <differenceType>1001</differenceType> <!-- decreased visibility -->
        <className>com/datastax/driver/mapping/ColumnMapper$Kind</className>
        <justification>False positive, the enclosing class is package-private so this was never exposed</justification>
    </difference>

    <difference>
        <differenceType>7012</differenceType> <!-- method added to interface -->
        <className>com/datastax/driver/mapping/annotations/QueryParameters</className>
        <method>boolean[] idempotent()</method>
        <justification>False positive, it's an annotation and the new method has a default value</justification>
    </difference>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/extras/codecs/jdk8/InstantCodec</className>
        <justification>This class is only present if the project was compiled with JDK 8+</justification>
    </difference>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/extras/codecs/jdk8/LocalDateCodec</className>
        <justification>This class is only present if the project was compiled with JDK 8+</justification>
    </difference>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/extras/codecs/jdk8/LocalTimeCodec</className>
        <justification>This class is only present if the project was compiled with JDK 8+</justification>
    </difference>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/extras/codecs/jdk8/OptionalCodec</className>
        <justification>This class is only present if the project was compiled with JDK 8+</justification>
    </difference>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/extras/codecs/jdk8/ZonedDateTimeCodec</className>
        <justification>This class is only present if the project was compiled with JDK 8+</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/PerHostPercentileTracker</className>
        <method>com.datastax.driver.core.PerHostPercentileTracker$Builder builderWithHighestTrackableLatencyMillis(long)
        </method>
        <justification>Renamed (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/PerHostPercentileTracker</className>
        <method>long getLatencyAtPercentile(com.datastax.driver.core.Host, double)</method>
        <justification>Moved to new parent class with more parameters (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/PerHostPercentileTracker$Builder</className>
        <method>com.datastax.driver.core.PerHostPercentileTracker$Builder withInterval(long, java.util.concurrent.TimeUnit)</method>
        <justification>False positive, method now inherited from generic parent class</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/PerHostPercentileTracker$Builder</className>
        <method>com.datastax.driver.core.PerHostPercentileTracker$Builder withMinRecordedValues(int)</method>
        <justification>False positive, method now inherited from generic parent class</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/PerHostPercentileTracker$Builder</className>
        <method>com.datastax.driver.core.PerHostPercentileTracker$Builder withNumberOfSignificantValueDigits(int)</method>
        <justification>False positive, method now inherited from generic parent class</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/PerHostPercentileTracker$Builder</className>
        <method>com.datastax.driver.core.PerHostPercentileTracker$Builder withNumberOfHosts(int)</method>
        <justification>Removed (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>7005</differenceType> <!-- method argument type changed -->
        <className>com/datastax/driver/core/QueryLogger$Builder</className>
        <method>com.datastax.driver.core.QueryLogger$Builder withDynamicThreshold(com.datastax.driver.core.PerHostPercentileTracker, double)</method>
        <to>com.datastax.driver.core.QueryLogger$Builder withDynamicThreshold(com.datastax.driver.core.PercentileTracker, double)</to>
        <justification>Introduced more generic parent type PercentileTracker (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/QueryLogger$DynamicThresholdQueryLogger</className>
        <method>com.datastax.driver.core.PerHostPercentileTracker getPerHostPercentileLatencyTracker()</method>
        <justification>Introduced more generic parent type PercentileTracker (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>7002</differenceType> <!-- method removed -->
        <className>com/datastax/driver/core/QueryLogger$DynamicThresholdQueryLogger</className>
        <method>void setPerHostPercentileLatencyTracker(com.datastax.driver.core.PerHostPercentileTracker)</method>
        <justification>Introduced more generic parent type PercentileTracker (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>7005</differenceType> <!-- method argument type changed -->
        <className>com/datastax/driver/core/policies/PercentileSpeculativeExecutionPolicy</className>
        <method>PercentileSpeculativeExecutionPolicy(com.datastax.driver.core.PerHostPercentileTracker, double, int)</method>
        <to>*</to> <!-- didn't find a way to write the new signature -->
        <justification>Introduced more generic parent type PercentileTracker (API was marked as beta and still subject to change)</justification>
    </difference>

    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/core/FrameCompressor$SnappyCompressor</className>
        <justification>False positive, the enclosing class is package-private so this was never exposed</justification>
    </difference>
    <difference>
        <differenceType>8001</differenceType> <!-- class removed -->
        <className>com/datastax/driver/core/FrameCompressor$LZ4Compressor</className>
        <justification>False positive, the enclosing class is package-private so this was never exposed</justification>
    </difference>

    <difference>
        <differenceType>7005</differenceType>
        <className>com/datastax/driver/core/querybuilder/QueryBuilder</className>
        <!--
            A Clirr bug prevents us from excluding the methods individually (errors re-appear as soon as there are more
            than one method). Excluding every method is too coarse, but it's the only solution.
        -->
        <method>*</method>
        <to>*</to>
        <justification>Relaxed parameters from List to Iterable for in, lt, lte, eq, gt, and gte</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/AlreadyExistsException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/AuthenticationException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/BootstrappingException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/BusyConnectionException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/BusyPoolException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>6001</differenceType> <!-- Removed field -->
        <className>com/datastax/driver/core/exceptions/ConnectionException</className>
        <field>address</field>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/ConnectionException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7012</differenceType> <!-- Method added to interface -->
        <className>com/datastax/driver/core/exceptions/CoordinatorException</className>
        <method>com.datastax.driver.core.EndPoint getEndPoint()</method>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/FunctionExecutionException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/InvalidConfigurationInQueryException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/InvalidQueryException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/OperationTimedOutException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/OperationTimedOutException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/OverloadedException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/ProtocolError</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/QueryConsistencyException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/ReadFailureException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/ReadTimeoutException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/ServerError</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/SyntaxError</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/TransportException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/TruncateException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/UnauthorizedException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/UnavailableException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/UnpreparedException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/UnsupportedProtocolVersionException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/WriteFailureException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
    <difference>
        <differenceType>7005</differenceType> <!-- Method argument type changed -->
        <className>com/datastax/driver/core/exceptions/WriteTimeoutException</className>
        <method>*java.net.InetSocketAddress*</method>
        <to>*com.datastax.driver.core.EndPoint*</to>
        <justification>JAVA-2355: Abstract connection information into new EndPoint type for sni support</justification>
    </difference>
</differences>
